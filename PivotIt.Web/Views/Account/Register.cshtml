@model PivotIt.Web.Models.Account.RegisterForm
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

@using (Html.BeginForm(FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(x => x.Username)
        @Html.TextBoxFor(x => x.Username, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Username, string.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Password)
        @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Password, string.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Email)
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Email, string.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.FirstName)
        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.FirstName, string.Empty, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.LastName)
        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.LastName, string.Empty, new { @class = "text-danger" })
    </div>

    <div class="col-12">
        @Html.ValidationMessage("UserNotAdded", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
}